#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portfolio.Library
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ajsteglinski")]
	public partial class LINQLibraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblExpandText(tblExpandText instance);
    partial void UpdatetblExpandText(tblExpandText instance);
    partial void DeletetblExpandText(tblExpandText instance);
    partial void InserttblSection(tblSection instance);
    partial void UpdatetblSection(tblSection instance);
    partial void DeletetblSection(tblSection instance);
    partial void InserttblFeaturedItem(tblFeaturedItem instance);
    partial void UpdatetblFeaturedItem(tblFeaturedItem instance);
    partial void DeletetblFeaturedItem(tblFeaturedItem instance);
    partial void InserttblPortfolio(tblPortfolio instance);
    partial void UpdatetblPortfolio(tblPortfolio instance);
    partial void DeletetblPortfolio(tblPortfolio instance);
    #endregion
		
		public LINQLibraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQLibraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQLibraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQLibraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblExpandText> tblExpandTexts
		{
			get
			{
				return this.GetTable<tblExpandText>();
			}
		}
		
		public System.Data.Linq.Table<tblSection> tblSections
		{
			get
			{
				return this.GetTable<tblSection>();
			}
		}
		
		public System.Data.Linq.Table<tblFeaturedItem> tblFeaturedItems
		{
			get
			{
				return this.GetTable<tblFeaturedItem>();
			}
		}
		
		public System.Data.Linq.Table<tblPortfolio> tblPortfolios
		{
			get
			{
				return this.GetTable<tblPortfolio>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExpandText")]
	public partial class tblExpandText : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpandId;
		
		private string _ExpandText;
		
		private EntitySet<tblPortfolio> _tblPortfolios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpandIdChanging(int value);
    partial void OnExpandIdChanged();
    partial void OnExpandTextChanging(string value);
    partial void OnExpandTextChanged();
    #endregion
		
		public tblExpandText()
		{
			this._tblPortfolios = new EntitySet<tblPortfolio>(new Action<tblPortfolio>(this.attach_tblPortfolios), new Action<tblPortfolio>(this.detach_tblPortfolios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpandId
		{
			get
			{
				return this._ExpandId;
			}
			set
			{
				if ((this._ExpandId != value))
				{
					this.OnExpandIdChanging(value);
					this.SendPropertyChanging();
					this._ExpandId = value;
					this.SendPropertyChanged("ExpandId");
					this.OnExpandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandText", DbType="NVarChar(50)")]
		public string ExpandText
		{
			get
			{
				return this._ExpandText;
			}
			set
			{
				if ((this._ExpandText != value))
				{
					this.OnExpandTextChanging(value);
					this.SendPropertyChanging();
					this._ExpandText = value;
					this.SendPropertyChanged("ExpandText");
					this.OnExpandTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExpandText_tblPortfolio", Storage="_tblPortfolios", ThisKey="ExpandId", OtherKey="ItemExpandId")]
		public EntitySet<tblPortfolio> tblPortfolios
		{
			get
			{
				return this._tblPortfolios;
			}
			set
			{
				this._tblPortfolios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPortfolios(tblPortfolio entity)
		{
			this.SendPropertyChanging();
			entity.tblExpandText = this;
		}
		
		private void detach_tblPortfolios(tblPortfolio entity)
		{
			this.SendPropertyChanging();
			entity.tblExpandText = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSections")]
	public partial class tblSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SectionId;
		
		private string _SectionName;
		
		private string _SectionImageName;
		
		private string _SectionFolderName;
		
		private EntitySet<tblFeaturedItem> _tblFeaturedItems;
		
		private EntitySet<tblPortfolio> _tblPortfolios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSectionIdChanging(int value);
    partial void OnSectionIdChanged();
    partial void OnSectionNameChanging(string value);
    partial void OnSectionNameChanged();
    partial void OnSectionImageNameChanging(string value);
    partial void OnSectionImageNameChanged();
    partial void OnSectionFolderNameChanging(string value);
    partial void OnSectionFolderNameChanged();
    #endregion
		
		public tblSection()
		{
			this._tblFeaturedItems = new EntitySet<tblFeaturedItem>(new Action<tblFeaturedItem>(this.attach_tblFeaturedItems), new Action<tblFeaturedItem>(this.detach_tblFeaturedItems));
			this._tblPortfolios = new EntitySet<tblPortfolio>(new Action<tblPortfolio>(this.attach_tblPortfolios), new Action<tblPortfolio>(this.detach_tblPortfolios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(255)")]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this.OnSectionNameChanging(value);
					this.SendPropertyChanging();
					this._SectionName = value;
					this.SendPropertyChanged("SectionName");
					this.OnSectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionImageName", DbType="NVarChar(50)")]
		public string SectionImageName
		{
			get
			{
				return this._SectionImageName;
			}
			set
			{
				if ((this._SectionImageName != value))
				{
					this.OnSectionImageNameChanging(value);
					this.SendPropertyChanging();
					this._SectionImageName = value;
					this.SendPropertyChanged("SectionImageName");
					this.OnSectionImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionFolderName", DbType="NVarChar(20)")]
		public string SectionFolderName
		{
			get
			{
				return this._SectionFolderName;
			}
			set
			{
				if ((this._SectionFolderName != value))
				{
					this.OnSectionFolderNameChanging(value);
					this.SendPropertyChanging();
					this._SectionFolderName = value;
					this.SendPropertyChanged("SectionFolderName");
					this.OnSectionFolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSection_tblFeaturedItem", Storage="_tblFeaturedItems", ThisKey="SectionId", OtherKey="sectionId")]
		public EntitySet<tblFeaturedItem> tblFeaturedItems
		{
			get
			{
				return this._tblFeaturedItems;
			}
			set
			{
				this._tblFeaturedItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSection_tblPortfolio", Storage="_tblPortfolios", ThisKey="SectionId", OtherKey="ItemSectionId")]
		public EntitySet<tblPortfolio> tblPortfolios
		{
			get
			{
				return this._tblPortfolios;
			}
			set
			{
				this._tblPortfolios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblFeaturedItems(tblFeaturedItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSection = this;
		}
		
		private void detach_tblFeaturedItems(tblFeaturedItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSection = null;
		}
		
		private void attach_tblPortfolios(tblPortfolio entity)
		{
			this.SendPropertyChanging();
			entity.tblSection = this;
		}
		
		private void detach_tblPortfolios(tblPortfolio entity)
		{
			this.SendPropertyChanging();
			entity.tblSection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFeaturedItems")]
	public partial class tblFeaturedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _featuredId;
		
		private System.Nullable<int> _sectionId;
		
		private System.Nullable<int> _itemId;
		
		private EntityRef<tblSection> _tblSection;
		
		private EntityRef<tblPortfolio> _tblPortfolio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfeaturedIdChanging(int value);
    partial void OnfeaturedIdChanged();
    partial void OnsectionIdChanging(System.Nullable<int> value);
    partial void OnsectionIdChanged();
    partial void OnitemIdChanging(System.Nullable<int> value);
    partial void OnitemIdChanged();
    #endregion
		
		public tblFeaturedItem()
		{
			this._tblSection = default(EntityRef<tblSection>);
			this._tblPortfolio = default(EntityRef<tblPortfolio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_featuredId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int featuredId
		{
			get
			{
				return this._featuredId;
			}
			set
			{
				if ((this._featuredId != value))
				{
					this.OnfeaturedIdChanging(value);
					this.SendPropertyChanging();
					this._featuredId = value;
					this.SendPropertyChanged("featuredId");
					this.OnfeaturedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sectionId", DbType="Int")]
		public System.Nullable<int> sectionId
		{
			get
			{
				return this._sectionId;
			}
			set
			{
				if ((this._sectionId != value))
				{
					if (this._tblSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsectionIdChanging(value);
					this.SendPropertyChanging();
					this._sectionId = value;
					this.SendPropertyChanged("sectionId");
					this.OnsectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", DbType="Int")]
		public System.Nullable<int> itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					if (this._tblPortfolio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSection_tblFeaturedItem", Storage="_tblSection", ThisKey="sectionId", OtherKey="SectionId", IsForeignKey=true)]
		public tblSection tblSection
		{
			get
			{
				return this._tblSection.Entity;
			}
			set
			{
				tblSection previousValue = this._tblSection.Entity;
				if (((previousValue != value) 
							|| (this._tblSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSection.Entity = null;
						previousValue.tblFeaturedItems.Remove(this);
					}
					this._tblSection.Entity = value;
					if ((value != null))
					{
						value.tblFeaturedItems.Add(this);
						this._sectionId = value.SectionId;
					}
					else
					{
						this._sectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblSection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPortfolio_tblFeaturedItem", Storage="_tblPortfolio", ThisKey="itemId", OtherKey="ItemId", IsForeignKey=true)]
		public tblPortfolio tblPortfolio
		{
			get
			{
				return this._tblPortfolio.Entity;
			}
			set
			{
				tblPortfolio previousValue = this._tblPortfolio.Entity;
				if (((previousValue != value) 
							|| (this._tblPortfolio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPortfolio.Entity = null;
						previousValue.tblFeaturedItems.Remove(this);
					}
					this._tblPortfolio.Entity = value;
					if ((value != null))
					{
						value.tblFeaturedItems.Add(this);
						this._itemId = value.ItemId;
					}
					else
					{
						this._itemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblPortfolio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPortfolio")]
	public partial class tblPortfolio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private string _ItemTitle;
		
		private System.Nullable<System.DateTime> _ItemDate;
		
		private string _ItemLanguage;
		
		private string _ItemSoftware;
		
		private string _ItemDescription;
		
		private System.Nullable<int> _ItemSectionId;
		
		private string _ItemImageName;
		
		private string _ItemWebUrl;
		
		private System.Nullable<int> _ItemExpandId;
		
		private string _ItemCodeUrl;
		
		private System.Nullable<int> _ItemRating;
		
		private EntitySet<tblFeaturedItem> _tblFeaturedItems;
		
		private EntityRef<tblExpandText> _tblExpandText;
		
		private EntityRef<tblSection> _tblSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemTitleChanging(string value);
    partial void OnItemTitleChanged();
    partial void OnItemDateChanging(System.Nullable<System.DateTime> value);
    partial void OnItemDateChanged();
    partial void OnItemLanguageChanging(string value);
    partial void OnItemLanguageChanged();
    partial void OnItemSoftwareChanging(string value);
    partial void OnItemSoftwareChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnItemSectionIdChanging(System.Nullable<int> value);
    partial void OnItemSectionIdChanged();
    partial void OnItemImageNameChanging(string value);
    partial void OnItemImageNameChanged();
    partial void OnItemWebUrlChanging(string value);
    partial void OnItemWebUrlChanged();
    partial void OnItemExpandIdChanging(System.Nullable<int> value);
    partial void OnItemExpandIdChanged();
    partial void OnItemCodeUrlChanging(string value);
    partial void OnItemCodeUrlChanged();
    partial void OnItemRatingChanging(System.Nullable<int> value);
    partial void OnItemRatingChanged();
    #endregion
		
		public tblPortfolio()
		{
			this._tblFeaturedItems = new EntitySet<tblFeaturedItem>(new Action<tblFeaturedItem>(this.attach_tblFeaturedItems), new Action<tblFeaturedItem>(this.detach_tblFeaturedItems));
			this._tblExpandText = default(EntityRef<tblExpandText>);
			this._tblSection = default(EntityRef<tblSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTitle", DbType="NVarChar(255)")]
		public string ItemTitle
		{
			get
			{
				return this._ItemTitle;
			}
			set
			{
				if ((this._ItemTitle != value))
				{
					this.OnItemTitleChanging(value);
					this.SendPropertyChanging();
					this._ItemTitle = value;
					this.SendPropertyChanged("ItemTitle");
					this.OnItemTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ItemDate
		{
			get
			{
				return this._ItemDate;
			}
			set
			{
				if ((this._ItemDate != value))
				{
					this.OnItemDateChanging(value);
					this.SendPropertyChanging();
					this._ItemDate = value;
					this.SendPropertyChanged("ItemDate");
					this.OnItemDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLanguage", DbType="NVarChar(255)")]
		public string ItemLanguage
		{
			get
			{
				return this._ItemLanguage;
			}
			set
			{
				if ((this._ItemLanguage != value))
				{
					this.OnItemLanguageChanging(value);
					this.SendPropertyChanging();
					this._ItemLanguage = value;
					this.SendPropertyChanged("ItemLanguage");
					this.OnItemLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSoftware", DbType="NVarChar(255)")]
		public string ItemSoftware
		{
			get
			{
				return this._ItemSoftware;
			}
			set
			{
				if ((this._ItemSoftware != value))
				{
					this.OnItemSoftwareChanging(value);
					this.SendPropertyChanging();
					this._ItemSoftware = value;
					this.SendPropertyChanged("ItemSoftware");
					this.OnItemSoftwareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSectionId", DbType="Int")]
		public System.Nullable<int> ItemSectionId
		{
			get
			{
				return this._ItemSectionId;
			}
			set
			{
				if ((this._ItemSectionId != value))
				{
					if (this._tblSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemSectionIdChanging(value);
					this.SendPropertyChanging();
					this._ItemSectionId = value;
					this.SendPropertyChanged("ItemSectionId");
					this.OnItemSectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemImageName", DbType="NVarChar(255)")]
		public string ItemImageName
		{
			get
			{
				return this._ItemImageName;
			}
			set
			{
				if ((this._ItemImageName != value))
				{
					this.OnItemImageNameChanging(value);
					this.SendPropertyChanging();
					this._ItemImageName = value;
					this.SendPropertyChanged("ItemImageName");
					this.OnItemImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemWebUrl", DbType="NVarChar(255)")]
		public string ItemWebUrl
		{
			get
			{
				return this._ItemWebUrl;
			}
			set
			{
				if ((this._ItemWebUrl != value))
				{
					this.OnItemWebUrlChanging(value);
					this.SendPropertyChanging();
					this._ItemWebUrl = value;
					this.SendPropertyChanged("ItemWebUrl");
					this.OnItemWebUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemExpandId", DbType="Int")]
		public System.Nullable<int> ItemExpandId
		{
			get
			{
				return this._ItemExpandId;
			}
			set
			{
				if ((this._ItemExpandId != value))
				{
					if (this._tblExpandText.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemExpandIdChanging(value);
					this.SendPropertyChanging();
					this._ItemExpandId = value;
					this.SendPropertyChanged("ItemExpandId");
					this.OnItemExpandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCodeUrl", DbType="NVarChar(255)")]
		public string ItemCodeUrl
		{
			get
			{
				return this._ItemCodeUrl;
			}
			set
			{
				if ((this._ItemCodeUrl != value))
				{
					this.OnItemCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._ItemCodeUrl = value;
					this.SendPropertyChanged("ItemCodeUrl");
					this.OnItemCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemRating", DbType="Int")]
		public System.Nullable<int> ItemRating
		{
			get
			{
				return this._ItemRating;
			}
			set
			{
				if ((this._ItemRating != value))
				{
					this.OnItemRatingChanging(value);
					this.SendPropertyChanging();
					this._ItemRating = value;
					this.SendPropertyChanged("ItemRating");
					this.OnItemRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPortfolio_tblFeaturedItem", Storage="_tblFeaturedItems", ThisKey="ItemId", OtherKey="itemId")]
		public EntitySet<tblFeaturedItem> tblFeaturedItems
		{
			get
			{
				return this._tblFeaturedItems;
			}
			set
			{
				this._tblFeaturedItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblExpandText_tblPortfolio", Storage="_tblExpandText", ThisKey="ItemExpandId", OtherKey="ExpandId", IsForeignKey=true)]
		public tblExpandText tblExpandText
		{
			get
			{
				return this._tblExpandText.Entity;
			}
			set
			{
				tblExpandText previousValue = this._tblExpandText.Entity;
				if (((previousValue != value) 
							|| (this._tblExpandText.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblExpandText.Entity = null;
						previousValue.tblPortfolios.Remove(this);
					}
					this._tblExpandText.Entity = value;
					if ((value != null))
					{
						value.tblPortfolios.Add(this);
						this._ItemExpandId = value.ExpandId;
					}
					else
					{
						this._ItemExpandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblExpandText");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSection_tblPortfolio", Storage="_tblSection", ThisKey="ItemSectionId", OtherKey="SectionId", IsForeignKey=true)]
		public tblSection tblSection
		{
			get
			{
				return this._tblSection.Entity;
			}
			set
			{
				tblSection previousValue = this._tblSection.Entity;
				if (((previousValue != value) 
							|| (this._tblSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSection.Entity = null;
						previousValue.tblPortfolios.Remove(this);
					}
					this._tblSection.Entity = value;
					if ((value != null))
					{
						value.tblPortfolios.Add(this);
						this._ItemSectionId = value.SectionId;
					}
					else
					{
						this._ItemSectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblSection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblFeaturedItems(tblFeaturedItem entity)
		{
			this.SendPropertyChanging();
			entity.tblPortfolio = this;
		}
		
		private void detach_tblFeaturedItems(tblFeaturedItem entity)
		{
			this.SendPropertyChanging();
			entity.tblPortfolio = null;
		}
	}
}
#pragma warning restore 1591
